name: Build and Upload Firmware

on:
    release:
        types:
            - created

jobs:
    pio-build:
        runs-on: ubuntu-latest
        env:
            GH_TOKEN: ${{ github.token }}

        steps:
            - uses: actions/checkout@v4

            - name: Set up PlatformIO
              run: |
                  sudo apt-get install -y python3-pip
                  pip3 install platformio
              shell: bash

            - name: Build Firmware
              run: |
                echo 'PLATFORMIO_BUILD_FLAGS=-DOTA_VERSION="${{ github.event.release.name }}" -DOTA_BUILT_ON_GITHUB' >> $GITHUB_ENV
                echo "$PLATFORMIO_BUILD_FLAGS"
                pio run -e esp32

            - name: Upload Firmware
              uses: actions/upload-artifact@v4
              with:
                  name: firmware
                  path: .pio/build/esp32/firmware.bin

    update-firmware-asset:
        needs: pio-build
        runs-on: ubuntu-latest
        env:
            GH_TOKEN: ${{ github.token }}

        steps:
            - name: Download Firmware
              uses: actions/download-artifact@v4
              with:
                  name: firmware
                  path: firmware

            - name: Show Contents of Firmware Directory
              run: ls ./firmware/

            - name: Upload Firmware to Release Assets
              run: |
                  gh release list --repo ${{ github.repository }}
                  echo "Tag name = ${{ github.event.release.tag_name }}"
                  gh release upload "${{ github.event.release.tag_name }}" ./firmware/firmware.bin --clobber --repo ${{ github.repository }}